Epoch 1/500:   0%|[38;2;0;240;15m                                               [0m| 0/3650 [00:04<?, ?it/s][0m
Traceback (most recent call last):
  File "c:\Users\USER-PC\Desktop\GPT-Transformer-main\training.py", line 127, in <module>
    trained_model = train_model(model_instance, train_loader, epochs)
  File "c:\Users\USER-PC\Desktop\GPT-Transformer-main\training.py", line 102, in train_model
    loss.backward() # Backward pass to Compute gradients.
    ~~~~~~~~~~~~~^^
  File "C:\Users\USER-PC\Desktop\GPT-Transformer-main\venv_name\Lib\site-packages\torch\_tensor.py", line 626, in backward
    torch.autograd.backward(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        self, gradient, retain_graph, create_graph, inputs=inputs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\USER-PC\Desktop\GPT-Transformer-main\venv_name\Lib\site-packages\torch\autograd\__init__.py", line 347, in backward
    _engine_run_backward(
    ~~~~~~~~~~~~~~~~~~~~^
        tensors,
        ^^^^^^^^
    ...<5 lines>...
        accumulate_grad=True,
        ^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\USER-PC\Desktop\GPT-Transformer-main\venv_name\Lib\site-packages\torch\autograd\graph.py", line 823, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        t_outputs, *args, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )  # Calls into the C++ engine to run the backward pass
    ^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 3.00 GiB. GPU 0 has a total capacity of 6.00 GiB of which 0 bytes is free. Of the allocated memory 12.10 GiB is allocated by PyTorch, and 179.85 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
