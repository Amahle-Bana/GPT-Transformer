Epoch 1/500:   0%|[38;2;0;240;15m                                               [0m| 0/1825 [00:09<?, ?it/s][0m
Traceback (most recent call last):
  File "c:\Users\USER-PC\Desktop\GPT-Transformer-main\training.py", line 127, in <module>
    trained_model = train_model(model_instance, train_loader, epochs)
  File "c:\Users\USER-PC\Desktop\GPT-Transformer-main\training.py", line 101, in train_model
    loss = loss_fn(outputs, labels) # Compute the loss.
  File "C:\Users\USER-PC\Desktop\GPT-Transformer-main\venv_name\Lib\site-packages\torch\nn\modules\module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\USER-PC\Desktop\GPT-Transformer-main\venv_name\Lib\site-packages\torch\nn\modules\module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\USER-PC\Desktop\GPT-Transformer-main\venv_name\Lib\site-packages\torch\nn\modules\loss.py", line 1295, in forward
    return F.cross_entropy(
           ~~~~~~~~~~~~~~~^
        input,
        ^^^^^^
    ...<4 lines>...
        label_smoothing=self.label_smoothing,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\USER-PC\Desktop\GPT-Transformer-main\venv_name\Lib\site-packages\torch\nn\functional.py", line 3494, in cross_entropy
    return torch._C._nn.cross_entropy_loss(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        input,
        ^^^^^^
    ...<4 lines>...
        label_smoothing,
        ^^^^^^^^^^^^^^^^
    )
    ^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 5.99 GiB. GPU 0 has a total capacity of 6.00 GiB of which 0 bytes is free. Of the allocated memory 11.95 GiB is allocated by PyTorch, and 290.33 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
